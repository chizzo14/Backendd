[2021-12-18T14:30:36.942] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: null }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T14:43:52.335] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T15:53:21.343] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T15:54:31.210] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T16:02:35.742] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "axios" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'axios' }
}
[2021-12-18T16:10:06.057] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "axios" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'axios' }
}
[2021-12-18T16:11:13.108] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T16:16:12.216] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "axios" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'axios' }
}
[2021-12-18T16:16:31.539] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "axios" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'axios' }
}
[2021-12-18T16:18:39.357] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T16:18:39.393] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:19:15.617] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:20:59.908] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:22:02.323] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-18T16:22:02.352] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:23:42.406] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:24:41.722] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:24:49.537] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-18T16:25:15.286] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property 'length' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property 'length' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property 'length' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T13:26:56.391] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T13:35:52.550] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T13:36:24.368] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T13:36:45.610] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T13:37:00.322] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T13:42:16.547] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "kd34F$9z" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'kd34F$9z' }
}
[2021-12-19T13:42:58.201] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "kd34F$9z" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'kd34F$9z' }
}
[2021-12-19T13:44:16.403] [ERROR] error - MongoServerError: E11000 duplicate key error collection: 616459ffc7bb5e2916711e9a_ecommerce.productos index: code_1 dup key: { code: "kd34F$9z" }
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\update.js:80:33
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22) {
  index: 0,
  code: 11000,
  keyPattern: { code: 1 },
  keyValue: { code: 'kd34F$9z' }
}
[2021-12-19T13:57:58.532] [ERROR] error - CastError: Cast to ObjectId failed for value "ReferenceError: Cannot access 'id' before initialization" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"ReferenceError: Cannot access 'id' before initialization"`,
  kind: 'ObjectId',
  value: "ReferenceError: Cannot access 'id' before initialization",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T13:58:24.603] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property '_id' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property '_id' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property '_id' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T13:59:11.040] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property '_id' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property '_id' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property '_id' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T13:59:34.444] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property '_id' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property '_id' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property '_id' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:00:04.448] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property '_id' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property '_id' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property '_id' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:00:27.950] [ERROR] error - CastError: Cast to ObjectId failed for value "TypeError: Cannot read property '_id' of undefined" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: `"TypeError: Cannot read property '_id' of undefined"`,
  kind: 'ObjectId',
  value: "TypeError: Cannot read property '_id' of undefined",
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:31:19.506] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T14:33:34.727] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-19T14:40:20.724] [ERROR] error - CastError: Cast to ObjectId failed for value "async () => {\r\n    await getIdLastAddedProduct()\r\n}" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"async () => {\\r\\n    await getIdLastAddedProduct()\\r\\n}"',
  kind: 'ObjectId',
  value: 'async () => {\r\n    await getIdLastAddedProduct()\r\n}',
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:40:43.767] [ERROR] error - CastError: Cast to ObjectId failed for value "async () => {\r\n    await getIdLastAddedProduct()\r\n}" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"async () => {\\r\\n    await getIdLastAddedProduct()\\r\\n}"',
  kind: 'ObjectId',
  value: 'async () => {\r\n    await getIdLastAddedProduct()\r\n}',
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:42:19.844] [ERROR] error - CastError: Cast to ObjectId failed for value "[object Promise]" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"[object Promise]"',
  kind: 'ObjectId',
  value: '[object Promise]',
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-19T14:42:52.088] [ERROR] error - CastError: Cast to ObjectId failed for value "[object Promise]" (type string) at path "_id" for model "productos"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"[object Promise]"',
  kind: 'ObjectId',
  value: '[object Promise]',
  path: '_id',
  reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
      at new ObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\bson\lib\objectid.js:61:23)
      at castObjectId (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\objectid.js:245:12)
      at ObjectId.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at ObjectId.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at ObjectId.SchemaType.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1557:15)
      at ObjectId.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast.js:337:32)
      at model.Query.Query.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4963:12)
      at model.Query.Query._castConditions (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:2055:10),
  valueType: 'string'
}
[2021-12-22T22:17:42.692] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22)
    at TLSSocket.emit (events.js:315:20)
    at addChunk (internal/streams/readable.js:309:12)
    at readableAddChunk (internal/streams/readable.js:284:9)
    at TLSSocket.Readable.push (internal/streams/readable.js:223:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:188:23) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-22T22:32:30.312] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22)
    at TLSSocket.emit (events.js:315:20)
    at addChunk (internal/streams/readable.js:309:12)
    at readableAddChunk (internal/streams/readable.js:284:9)
    at TLSSocket.Readable.push (internal/streams/readable.js:223:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:188:23) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-22T22:33:29.932] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22)
    at TLSSocket.emit (events.js:315:20)
    at addChunk (internal/streams/readable.js:309:12)
    at readableAddChunk (internal/streams/readable.js:284:9)
    at TLSSocket.Readable.push (internal/streams/readable.js:223:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:188:23) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-22T22:34:04.219] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22)
    at TLSSocket.emit (events.js:315:20)
    at addChunk (internal/streams/readable.js:309:12)
    at readableAddChunk (internal/streams/readable.js:284:9)
    at TLSSocket.Readable.push (internal/streams/readable.js:223:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:188:23) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-22T22:42:07.276] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "axios" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:719:22)
    at TLSSocket.emit (events.js:315:20)
    at addChunk (internal/streams/readable.js:309:12)
    at readableAddChunk (internal/streams/readable.js:284:9)
    at TLSSocket.Readable.push (internal/streams/readable.js:223:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:188:23) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2021-12-27T21:57:05.522] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "22birra34" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2022-01-04T21:22:06.548] [ERROR] error - TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Connection'
    |     property '_protocol' -> object with constructor 'Protocol'
    --- property '_connection' closes the circle
    at JSON.stringify (<anonymous>)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:74:49
    at step (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:52:23)
    at Object.next (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:33:53)
    at fulfilled (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:24:58)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
[2022-01-04T21:22:15.631] [ERROR] error - TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Connection'
    |     property '_protocol' -> object with constructor 'Protocol'
    --- property '_connection' closes the circle
    at JSON.stringify (<anonymous>)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:74:49
    at step (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:52:23)
    at Object.next (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:33:53)
    at fulfilled (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:24:58)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
[2022-01-04T21:23:10.548] [ERROR] error - TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Connection'
    |     property '_protocol' -> object with constructor 'Protocol'
    --- property '_connection' closes the circle
    at JSON.stringify (<anonymous>)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:74:49
    at step (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:52:23)
    at Object.next (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:33:53)
    at fulfilled (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\sockets.js:24:58)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
[2022-01-06T21:23:06.054] [ERROR] error - MongoDB: Error en conectar: MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections
[2022-01-09T16:04:58.719] [ERROR] error - TypeError: (0 , productoDTO_1.insertUpdateProductoDTOForMongo) is not a function
    at MongoDbaaSDao.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:212:89)
    at step (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:33:23)
    at Object.next (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:14:53)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:4:12)
    at MongoDbaaSDao.updateProducto (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\persistencia\dao\MongoDbaaSDao.js:205:16)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\negocio\negocioProductos.js:131:52
    at step (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\negocio\negocioProductos.js:52:23)
    at Object.next (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\dist\negocio\negocioProductos.js:33:53)
[2022-01-16T19:56:19.619] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T19:57:11.651] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T19:57:32.672] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T19:57:55.395] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T19:58:56.902] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:00:28.014] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:02:49.981] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:03:36.839] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:04:31.651] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:04:37.990] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:05:29.645] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:05:51.983] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:06:19.577] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:09:34.143] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:09:39.245] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:09:40.139] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:11:23.224] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:11:23.229] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-16T20:11:37.452] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:42:02.524] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:47:33.738] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:48:48.438] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:48:59.861] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:52:49.643] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:53:17.669] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:53:57.726] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-17T21:54:25.387] [ERROR] error - CastError: Cast to Number failed for value "NaN" (type number) at path "quantity"
    at model.Query.exec (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4540:21)
    at model.Query.Query.then (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4639:15)
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  messageFormat: undefined,
  stringValue: '"NaN"',
  kind: 'Number',
  value: NaN,
  path: 'quantity',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\cast\number.js:28:10)
      at SchemaNumber.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:378:12)
      at SchemaNumber.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
      at SchemaNumber.SchemaType._castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1567:15)
      at SchemaNumber.castForQuery (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\number.js:432:14)
      at SchemaNumber.SchemaType.castForQueryWrapper (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1534:20)
      at castUpdateVal (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:523:19)
      at walkUpdatePath (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:343:24)
      at castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\query\castUpdate.js:95:7)
      at model.Query._castUpdate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\query.js:4749:10) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'number'
}
[2022-01-22T18:23:11.087] [ERROR] error - MongoBulkWriteError: E11000 duplicate key error collection: ecommerce.productos index: code_1 dup key: { code: "kd34F$9z" }
    at OrderedBulkOperation.handleWriteError (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\bulk\common.js:879:22)
    at resultHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\bulk\common.js:397:27)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\utils.js:532:9
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\operations\execute_operation.js:50:17
    at callbackWithRetry (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\operations\execute_operation.js:81:20)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\cmap\connection_pool.js:272:25
    at handleOperationResult (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\sdam\server.js:363:9)
    at MessageStream.messageHandler (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\cmap\connection.js:479:9)
    at MessageStream.emit (events.js:315:20)
    at processIncomingData (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\node_modules\mongodb\lib\cmap\message_stream.js:108:16) {
  code: 11000,
  writeErrors: [ WriteError { err: [Object] } ],
  result: BulkWriteResult {
    result: {
      ok: 1,
      writeErrors: [Array],
      writeConcernErrors: [],
      insertedIds: [Array],
      nInserted: 0,
      nUpserted: 0,
      nMatched: 0,
      nModified: 0,
      nRemoved: 0,
      upserted: [],
      opTime: [Object]
    }
  },
  insertedDocs: []
}
[2022-01-22T18:43:38.452] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '12',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 50,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3289,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 172,
      [Symbol(triggerId)]: 169
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '418',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '418',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 50,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3289,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 172,
      [Symbol(triggerId)]: 169
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      timeout: 0,
      [Symbol(async_id_symbol)]: 50,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3289,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 172,
        [Symbol(triggerId)]: 169
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "12",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 361,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '12',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '12',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 50,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3289,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 172,
          [Symbol(triggerId)]: 169
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '418',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '418',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 50,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3289,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 172,
          [Symbol(triggerId)]: 169
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          timeout: 0,
          [Symbol(async_id_symbol)]: 50,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: -1,
            _idlePrev: null,
            _idleNext: null,
            _idleStart: 3289,
            _onTimeout: null,
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: true,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 172,
            [Symbol(triggerId)]: 169
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "12",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 50,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3289,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 172,\n' +
        '      [Symbol(triggerId)]: 169\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '418',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '418',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 50,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3289,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 172,\n' +
        '      [Symbol(triggerId)]: 169\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      timeout: 0,\n' +
        '      [Symbol(async_id_symbol)]: 50,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: Timeout {\n' +
        '        _idleTimeout: -1,\n' +
        '        _idlePrev: null,\n' +
        '        _idleNext: null,\n' +
        '        _idleStart: 3289,\n' +
        '        _onTimeout: null,\n' +
        '        _timerArgs: undefined,\n' +
        '        _repeat: null,\n' +
        '        _destroyed: true,\n' +
        '        [Symbol(refed)]: false,\n' +
        '        [Symbol(kHasPrimitive)]: false,\n' +
        '        [Symbol(asyncId)]: 172,\n' +
        '        [Symbol(triggerId)]: 169\n' +
        '      },\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "12",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 361,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 361,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:46:21.058] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '12',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 525,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '418',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '418',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 525,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 525,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "12",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 361,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '12',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '12',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 525,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '418',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '418',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 525,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 525,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "12",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 525,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '418',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '418',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 525,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      [Symbol(async_id_symbol)]: 525,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: null,\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "12",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 361,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 361,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:48:16.452] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '12',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 522,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '418',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '418',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 522,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 522,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "12",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 361,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '12',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '12',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 522,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '418',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '418',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 522,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 522,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "12",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 522,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '418',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '418',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 522,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      [Symbol(async_id_symbol)]: 522,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: null,\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "12",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 361,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 361,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:48:29.350] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '612',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 917,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '419',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '419',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(async_id_symbol)]: 917,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 917,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "612",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 362,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '612',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '612',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 917,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '419',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '419',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(async_id_symbol)]: 917,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 917,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "612",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 917,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '419',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '419',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: true,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    [Symbol(async_id_symbol)]: 917,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: null,\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      [Symbol(async_id_symbol)]: 917,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: null,\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "612",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 362,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 362,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:50:07.607] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '612',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 84,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3167,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 95,
      [Symbol(triggerId)]: 91
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '419',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '419',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 84,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3167,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 95,
      [Symbol(triggerId)]: 91
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      timeout: 0,
      [Symbol(async_id_symbol)]: 84,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3167,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 95,
        [Symbol(triggerId)]: 91
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "612",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 362,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '612',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '612',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 84,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3167,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 95,
          [Symbol(triggerId)]: 91
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '419',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '419',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 84,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3167,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 95,
          [Symbol(triggerId)]: 91
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          timeout: 0,
          [Symbol(async_id_symbol)]: 84,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: -1,
            _idlePrev: null,
            _idleNext: null,
            _idleStart: 3167,
            _onTimeout: null,
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: true,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 95,
            [Symbol(triggerId)]: 91
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "612",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 84,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3167,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 95,\n' +
        '      [Symbol(triggerId)]: 91\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '419',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '419',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 84,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3167,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 95,\n' +
        '      [Symbol(triggerId)]: 91\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      timeout: 0,\n' +
        '      [Symbol(async_id_symbol)]: 84,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: Timeout {\n' +
        '        _idleTimeout: -1,\n' +
        '        _idlePrev: null,\n' +
        '        _idleNext: null,\n' +
        '        _idleStart: 3167,\n' +
        '        _onTimeout: null,\n' +
        '        _timerArgs: undefined,\n' +
        '        _repeat: null,\n' +
        '        _destroyed: true,\n' +
        '        [Symbol(refed)]: false,\n' +
        '        [Symbol(kHasPrimitive)]: false,\n' +
        '        [Symbol(asyncId)]: 95,\n' +
        '        [Symbol(triggerId)]: 91\n' +
        '      },\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "612",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 362,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 362,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:50:55.406] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '612',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 48,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3229,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 172,
      [Symbol(triggerId)]: 169
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '419',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '419',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 48,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3229,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 172,
      [Symbol(triggerId)]: 169
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      timeout: 0,
      [Symbol(async_id_symbol)]: 48,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3229,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 172,
        [Symbol(triggerId)]: 169
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "612",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 362,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '612',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '612',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 48,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3229,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 172,
          [Symbol(triggerId)]: 169
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '419',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '419',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 48,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3229,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 172,
          [Symbol(triggerId)]: 169
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          timeout: 0,
          [Symbol(async_id_symbol)]: 48,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: -1,
            _idlePrev: null,
            _idleNext: null,
            _idleStart: 3229,
            _onTimeout: null,
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: true,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 172,
            [Symbol(triggerId)]: 169
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "612",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 48,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3229,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 172,\n' +
        '      [Symbol(triggerId)]: 169\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '419',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '419',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 48,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3229,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 172,\n' +
        '      [Symbol(triggerId)]: 169\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      timeout: 0,\n' +
        '      [Symbol(async_id_symbol)]: 48,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: Timeout {\n' +
        '        _idleTimeout: -1,\n' +
        '        _idlePrev: null,\n' +
        '        _idleNext: null,\n' +
        '        _idleStart: 3229,\n' +
        '        _onTimeout: null,\n' +
        '        _timerArgs: undefined,\n' +
        '        _repeat: null,\n' +
        '        _destroyed: true,\n' +
        '        [Symbol(refed)]: false,\n' +
        '        [Symbol(kHasPrimitive)]: false,\n' +
        '        [Symbol(asyncId)]: 172,\n' +
        '        [Symbol(triggerId)]: 169\n' +
        '      },\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "612",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 362,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 362,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:50:59.599] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '612',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 48,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 7187,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 579,
      [Symbol(triggerId)]: 576
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '419',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '419',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 48,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 7187,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 579,
      [Symbol(triggerId)]: 576
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      timeout: 0,
      [Symbol(async_id_symbol)]: 48,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 7187,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 579,
        [Symbol(triggerId)]: 576
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "612",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 362,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '612',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '612',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 48,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 7187,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 579,
          [Symbol(triggerId)]: 576
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '419',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '419',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 2,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 48,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 7187,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 579,
          [Symbol(triggerId)]: 576
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          timeout: 0,
          [Symbol(async_id_symbol)]: 48,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: -1,
            _idlePrev: null,
            _idleNext: null,
            _idleStart: 7187,
            _onTimeout: null,
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: true,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 579,
            [Symbol(triggerId)]: 576
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "612",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 48,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 7187,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 579,\n' +
        '      [Symbol(triggerId)]: 576\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '419',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '419',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 2,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 48,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 7187,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 579,\n' +
        '      [Symbol(triggerId)]: 576\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      timeout: 0,\n' +
        '      [Symbol(async_id_symbol)]: 48,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: Timeout {\n' +
        '        _idleTimeout: -1,\n' +
        '        _idlePrev: null,\n' +
        '        _idleNext: null,\n' +
        '        _idleStart: 7187,\n' +
        '        _onTimeout: null,\n' +
        '        _timerArgs: undefined,\n' +
        '        _repeat: null,\n' +
        '        _destroyed: true,\n' +
        '        [Symbol(refed)]: false,\n' +
        '        [Symbol(kHasPrimitive)]: false,\n' +
        '        [Symbol(asyncId)]: 579,\n' +
        '        [Symbol(triggerId)]: 576\n' +
        '      },\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "612",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 362,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 362,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-22T18:51:11.664] [ERROR] error - Error: productos validation failed: title: Cast to string failed for value "{
  title: 'Cafsese negro',
  description: 'Un café potente para arrancar el día a pleno',
  code: '612',
  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
  price: 120,
  stock: 6
}" (type Object) at path "title", description: Cast to string failed for value "<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: true,
    endEmitted: true,
    reading: false,
    sync: false,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 72,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3446,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 143,
      [Symbol(triggerId)]: 140
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: {
    host: 'localhost:8080',
    connection: 'keep-alive',
    'content-length': '419',
    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    accept: 'application/json',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform': '"Windows"',
    origin: 'http://localhost:8080',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:8080/',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-419,es;q=0.9,en;q=0.8',
    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  },
  rawHeaders: [
    'Host',
    'localhost:8080',
    'Connection',
    'keep-alive',
    'Content-Length',
    '419',
    'sec-ch-ua',
    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
    'Accept',
    'application/json',
    'Content-Type',
    'application/json',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
    'sec-ch-ua-platform',
    '"Windows"',
    'Origin',
    'http://localhost:8080',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:8080/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'es-419,es;q=0.9,en;q=0.8',
    'Cookie',
    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/?',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
    },
    parser: HTTPParser {
      '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular *2],
      locals: [Object: null prototype] {},
      flush: [Function: flush],
      write: [Function: write],
      end: [Function: end],
      on: [Function: on],
      writeHead: [Function: writeHead],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    timeout: 0,
    [Symbol(async_id_symbol)]: 72,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 3446,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 143,
      [Symbol(triggerId)]: 140
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/productos',
  originalUrl: '/productos?',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular *3],
      timeout: 0,
      [Symbol(async_id_symbol)]: 72,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3446,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 143,
        [Symbol(triggerId)]: 140
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular *2],
    locals: [Object: null prototype] {},
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
  },
  body: {
    query: 'mutation{\n' +
      '  insertProducto(\n' +
      '    \t\ttitle: "Cafsese negro",\n' +
      '        description: "Un café potente para arrancar el día a pleno",\n' +
      '        code: "612",\n' +
      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
      '        price: 120,\n' +
      '        stock: 6\n' +
      '  ) {\n' +
      '    title\n' +
      '    description\n' +
      '    code\n' +
      '    thumbnail\n' +
      '    price\n' +
      '    stock\n' +
      '  } \n' +
      '}',
    variables: null
  },
  _body: true,
  length: undefined,
  secret: undefined,
  cookies: {
    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
  },
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?',
    query: '',
    pathname: '/productos',
    path: '/productos?',
    href: '/productos?',
    _raw: '/productos?'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 3600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2022-01-22T19:39:08.627Z,
      originalMaxAge: 3600000,
      httpOnly: true
    },
    passport: { user: '61a64dde24c840e4d48164b2' }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object]
    }
  },
  user: {
    _id: new ObjectId("61a64dde24c840e4d48164b2"),
    username: 'guillelf@gmail.com',
    name: 'Guillermo',
    lastname: 'Ferrucci',
    address: 'Almirante Brown 1165',
    age: 35,
    phone: '+543571531154',
    avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
    isAdmin: true,
    createdAt: 2021-11-30T16:14:22.828Z,
    updatedAt: 2021-11-30T16:14:22.828Z,
    __v: 0
  },
  [Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined
}" (type IncomingMessage) at path "description", code: Cast to string failed for value "{
  fieldName: 'insertProducto',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Location]
    }
  ],
  returnType: GraphQLObjectType {
    name: 'Producto',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] {
      title: [Object],
      description: [Object],
      code: [Object],
      thumbnail: [Object],
      price: [Object],
      stock: [Object]
    },
    _interfaces: []
  },
  parentType: GraphQLObjectType {
    name: 'Mutation',
    description: undefined,
    isTypeOf: undefined,
    extensions: [Object: null prototype] {},
    astNode: {
      kind: 'ObjectTypeDefinition',
      description: undefined,
      name: [Object],
      interfaces: [],
      directives: [],
      fields: [Array],
      loc: [Location]
    },
    extensionASTNodes: [],
    _fields: [Object: null prototype] { insertProducto: [Object] },
    _interfaces: []
  },
  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
  schema: GraphQLSchema {
    __validationErrors: [],
    description: undefined,
    extensions: [Object: null prototype] {},
    astNode: undefined,
    extensionASTNodes: [],
    _queryType: GraphQLObjectType {
      name: 'Query',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _mutationType: GraphQLObjectType {
      name: 'Mutation',
      description: undefined,
      isTypeOf: undefined,
      extensions: [Object: null prototype] {},
      astNode: [Object],
      extensionASTNodes: [],
      _fields: [Object: null prototype],
      _interfaces: []
    },
    _subscriptionType: undefined,
    _directives: [
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective],
      [GraphQLDirective]
    ],
    _typeMap: [Object: null prototype] {
      Query: [GraphQLObjectType],
      Mutation: [GraphQLObjectType],
      String: [GraphQLScalarType],
      Float: [GraphQLScalarType],
      Int: [GraphQLScalarType],
      Producto: [GraphQLObjectType],
      Boolean: [GraphQLScalarType],
      __Schema: [GraphQLObjectType],
      __Type: [GraphQLObjectType],
      __TypeKind: [GraphQLEnumType],
      __Field: [GraphQLObjectType],
      __InputValue: [GraphQLObjectType],
      __EnumValue: [GraphQLObjectType],
      __Directive: [GraphQLObjectType],
      __DirectiveLocation: [GraphQLEnumType]
    },
    _subTypeMap: [Object: null prototype] {},
    _implementationsMap: [Object: null prototype] {}
  },
  fragments: [Object: null prototype] {},
  rootValue: {
    productos: [Function (anonymous)],
    insertProducto: [Function (anonymous)]
  },
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
    loc: Location {
      start: 0,
      end: 362,
      startToken: [Token],
      endToken: [Token],
      source: [Source]
    }
  },
  variableValues: {}
}" (type Object) at path "code"
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    title: CastError: Cast to string failed for value "{
      title: 'Cafsese negro',
      description: 'Un café potente para arrancar el día a pleno',
      code: '612',
      thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',
      price: 120,
      stock: 6
    }" (type Object) at path "title"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  title: 'Cafsese negro',\n" +
        "  description: 'Un café potente para arrancar el día a pleno',\n" +
        "  code: '612',\n" +
        "  thumbnail: 'https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png',\n" +
        '  price: 120,\n' +
        '  stock: 6\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'title',
      reason: null,
      valueType: 'Object'
    },
    description: CastError: Cast to string failed for value "<ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 72,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3446,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 143,
          [Symbol(triggerId)]: 140
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '419',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        accept: 'application/json',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:8080',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-419,es;q=0.9,en;q=0.8',
        cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      },
      rawHeaders: [
        'Host',
        'localhost:8080',
        'Connection',
        'keep-alive',
        'Content-Length',
        '419',
        'sec-ch-ua',
        '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        'Accept',
        'application/json',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?0',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',
        'sec-ch-ua-platform',
        '"Windows"',
        'Origin',
        'http://localhost:8080',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:8080/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-419,es;q=0.9,en;q=0.8',
        'Cookie',
        'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/?',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Function: socketOnError],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 5,
          _maxListeners: undefined,
          _connections: 3,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::8080',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 14
        },
        parser: HTTPParser {
          '0': [Function: bound setRequestTimeout],
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular *2],
          locals: [Object: null prototype] {},
          flush: [Function: flush],
          write: [Function: write],
          end: [Function: end],
          on: [Function: on],
          writeHead: [Function: writeHead],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        timeout: 0,
        [Symbol(async_id_symbol)]: 72,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3446,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 143,
          [Symbol(triggerId)]: 140
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/productos',
      originalUrl: '/productos?',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          _paused: false,
          _httpMessage: [Circular *3],
          timeout: 0,
          [Symbol(async_id_symbol)]: 72,
          [Symbol(kHandle)]: [TCP],
          [Symbol(kSetNoDelay)]: false,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: -1,
            _idlePrev: null,
            _idleNext: null,
            _idleStart: 3446,
            _onTimeout: null,
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: true,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 143,
            [Symbol(triggerId)]: 140
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *2],
        locals: [Object: null prototype] {},
        flush: [Function: flush],
        write: [Function: write],
        end: [Function: end],
        on: [Function: on],
        writeHead: [Function: writeHead],
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
      },
      body: {
        query: 'mutation{\n' +
          '  insertProducto(\n' +
          '    \t\ttitle: "Cafsese negro",\n' +
          '        description: "Un café potente para arrancar el día a pleno",\n' +
          '        code: "612",\n' +
          '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\n' +
          '        price: 120,\n' +
          '        stock: 6\n' +
          '  ) {\n' +
          '    title\n' +
          '    description\n' +
          '    code\n' +
          '    thumbnail\n' +
          '    price\n' +
          '    stock\n' +
          '  } \n' +
          '}',
        variables: null
      },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: {
        'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'
      },
      signedCookies: [Object: null prototype] {},
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?',
        query: '',
        pathname: '/productos',
        path: '/productos?',
        href: '/productos?',
        _raw: '/productos?'
      },
      sessionStore: MongoStore {
        _events: [Object: null prototype] {
          disconnect: [Function: ondisconnect],
          connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        crypto: null,
        transformFunctions: {
          serialize: [Function: stringify],
          unserialize: [Function: parse]
        },
        clientP: Promise { [MongoClient] },
        options: {
          collectionName: 'sessions',
          ttl: 3600,
          mongoOptions: {},
          autoRemove: 'native',
          autoRemoveInterval: 10,
          touchAfter: 0,
          stringify: true,
          crypto: [Object],
          mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'
        },
        collectionP: Promise { [Collection] },
        generate: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',
      session: Session {
        cookie: {
          path: '/',
          _expires: 2022-01-22T19:39:08.627Z,
          originalMaxAge: 3600000,
          httpOnly: true
        },
        passport: { user: '61a64dde24c840e4d48164b2' }
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _passport: {
        instance: Authenticator {
          _key: 'passport',
          _strategies: [Object],
          _serializers: [Array],
          _deserializers: [Array],
          _infoTransformers: [],
          _framework: [Object],
          _sm: [SessionManager],
          Authenticator: [Function: Authenticator],
          Passport: [Function: Authenticator],
          Strategy: [Function],
          strategies: [Object]
        }
      },
      user: {
        _id: new ObjectId("61a64dde24c840e4d48164b2"),
        username: 'guillelf@gmail.com',
        name: 'Guillermo',
        lastname: 'Ferrucci',
        address: 'Almirante Brown 1165',
        age: 35,
        phone: '+543571531154',
        avatar: '\\img\\userAvatar\\1638288862699-avatar.png',
        password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',
        isAdmin: true,
        createdAt: 2021-11-30T16:14:22.828Z,
        updatedAt: 2021-11-30T16:14:22.828Z,
        __v: 0
      },
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    }" (type IncomingMessage) at path "description"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"<ref *2> IncomingMessage {\n' +
        '  _readableState: ReadableState {\n' +
        '    objectMode: false,\n' +
        '    highWaterMark: 16384,\n' +
        '    buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '    length: 0,\n' +
        '    pipes: [],\n' +
        '    flowing: true,\n' +
        '    ended: true,\n' +
        '    endEmitted: true,\n' +
        '    reading: false,\n' +
        '    sync: false,\n' +
        '    needReadable: false,\n' +
        '    emittedReadable: false,\n' +
        '    readableListening: false,\n' +
        '    resumeScheduled: false,\n' +
        '    errorEmitted: false,\n' +
        '    emitClose: true,\n' +
        '    autoDestroy: false,\n' +
        '    destroyed: false,\n' +
        '    errored: null,\n' +
        '    closed: false,\n' +
        '    closeEmitted: false,\n' +
        "    defaultEncoding: 'utf8',\n" +
        '    awaitDrainWriters: null,\n' +
        '    multiAwaitDrain: false,\n' +
        '    readingMore: false,\n' +
        '    decoder: null,\n' +
        '    encoding: null,\n' +
        '    [Symbol(kPaused)]: false\n' +
        '  },\n' +
        '  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n' +
        '  _eventsCount: 1,\n' +
        '  _maxListeners: undefined,\n' +
        '  socket: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 72,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3446,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 143,\n' +
        '      [Symbol(triggerId)]: 140\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  httpVersionMajor: 1,\n' +
        '  httpVersionMinor: 1,\n' +
        "  httpVersion: '1.1',\n" +
        '  complete: true,\n' +
        '  headers: {\n' +
        "    host: 'localhost:8080',\n" +
        "    connection: 'keep-alive',\n" +
        "    'content-length': '419',\n" +
        `    'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    accept: 'application/json',\n" +
        "    'content-type': 'application/json',\n" +
        "    'sec-ch-ua-mobile': '?0',\n" +
        "    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        `    'sec-ch-ua-platform': '"Windows"',\n` +
        "    origin: 'http://localhost:8080',\n" +
        "    'sec-fetch-site': 'same-origin',\n" +
        "    'sec-fetch-mode': 'cors',\n" +
        "    'sec-fetch-dest': 'empty',\n" +
        "    referer: 'http://localhost:8080/',\n" +
        "    'accept-encoding': 'gzip, deflate, br',\n" +
        "    'accept-language': 'es-419,es;q=0.9,en;q=0.8',\n" +
        "    cookie: 'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  rawHeaders: [\n' +
        "    'Host',\n" +
        "    'localhost:8080',\n" +
        "    'Connection',\n" +
        "    'keep-alive',\n" +
        "    'Content-Length',\n" +
        "    '419',\n" +
        "    'sec-ch-ua',\n" +
        `    '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',\n` +
        "    'Accept',\n" +
        "    'application/json',\n" +
        "    'Content-Type',\n" +
        "    'application/json',\n" +
        "    'sec-ch-ua-mobile',\n" +
        "    '?0',\n" +
        "    'User-Agent',\n" +
        "    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n" +
        "    'sec-ch-ua-platform',\n" +
        `    '"Windows"',\n` +
        "    'Origin',\n" +
        "    'http://localhost:8080',\n" +
        "    'Sec-Fetch-Site',\n" +
        "    'same-origin',\n" +
        "    'Sec-Fetch-Mode',\n" +
        "    'cors',\n" +
        "    'Sec-Fetch-Dest',\n" +
        "    'empty',\n" +
        "    'Referer',\n" +
        "    'http://localhost:8080/',\n" +
        "    'Accept-Encoding',\n" +
        "    'gzip, deflate, br',\n" +
        "    'Accept-Language',\n" +
        "    'es-419,es;q=0.9,en;q=0.8',\n" +
        "    'Cookie',\n" +
        "    'connect.sid=s%3AN6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN%2FAioEGdFyfilfefTtsORyi1Cw'\n" +
        '  ],\n' +
        '  trailers: {},\n' +
        '  rawTrailers: [],\n' +
        '  aborted: false,\n' +
        '  upgrade: false,\n' +
        "  url: '/?',\n" +
        "  method: 'POST',\n" +
        '  statusCode: null,\n' +
        '  statusMessage: null,\n' +
        '  client: <ref *1> Socket {\n' +
        '    connecting: false,\n' +
        '    _hadError: false,\n' +
        '    _parent: null,\n' +
        '    _host: null,\n' +
        '    _readableState: ReadableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      buffer: BufferList { head: null, tail: null, length: 0 },\n' +
        '      length: 0,\n' +
        '      pipes: [],\n' +
        '      flowing: true,\n' +
        '      ended: false,\n' +
        '      endEmitted: false,\n' +
        '      reading: true,\n' +
        '      sync: false,\n' +
        '      needReadable: true,\n' +
        '      emittedReadable: false,\n' +
        '      readableListening: false,\n' +
        '      resumeScheduled: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      destroyed: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      awaitDrainWriters: null,\n' +
        '      multiAwaitDrain: false,\n' +
        '      readingMore: false,\n' +
        '      decoder: null,\n' +
        '      encoding: null,\n' +
        '      [Symbol(kPaused)]: false\n' +
        '    },\n' +
        '    _events: [Object: null prototype] {\n' +
        '      end: [Array],\n' +
        '      timeout: [Function: socketOnTimeout],\n' +
        '      data: [Function: bound socketOnData],\n' +
        '      error: [Function: socketOnError],\n' +
        '      close: [Array],\n' +
        '      drain: [Function: bound socketOnDrain],\n' +
        '      resume: [Function: onSocketResume],\n' +
        '      pause: [Function: onSocketPause]\n' +
        '    },\n' +
        '    _eventsCount: 8,\n' +
        '    _maxListeners: undefined,\n' +
        '    _writableState: WritableState {\n' +
        '      objectMode: false,\n' +
        '      highWaterMark: 16384,\n' +
        '      finalCalled: false,\n' +
        '      needDrain: false,\n' +
        '      ending: false,\n' +
        '      ended: false,\n' +
        '      finished: false,\n' +
        '      destroyed: false,\n' +
        '      decodeStrings: false,\n' +
        "      defaultEncoding: 'utf8',\n" +
        '      length: 0,\n' +
        '      writing: false,\n' +
        '      corked: 0,\n' +
        '      sync: false,\n' +
        '      bufferProcessing: false,\n' +
        '      onwrite: [Function: bound onwrite],\n' +
        '      writecb: null,\n' +
        '      writelen: 0,\n' +
        '      afterWriteTickInfo: null,\n' +
        '      buffered: [],\n' +
        '      bufferedIndex: 0,\n' +
        '      allBuffers: true,\n' +
        '      allNoop: true,\n' +
        '      pendingcb: 0,\n' +
        '      prefinished: false,\n' +
        '      errorEmitted: false,\n' +
        '      emitClose: false,\n' +
        '      autoDestroy: false,\n' +
        '      errored: null,\n' +
        '      closed: false,\n' +
        '      closeEmitted: false\n' +
        '    },\n' +
        '    allowHalfOpen: true,\n' +
        '    _sockname: null,\n' +
        '    _pendingData: null,\n' +
        "    _pendingEncoding: '',\n" +
        '    server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    _server: Server {\n' +
        '      maxHeaderSize: undefined,\n' +
        '      insecureHTTPParser: undefined,\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 5,\n' +
        '      _maxListeners: undefined,\n' +
        '      _connections: 3,\n' +
        '      _handle: [TCP],\n' +
        '      _usingWorkers: false,\n' +
        '      _workers: [],\n' +
        '      _unref: false,\n' +
        '      allowHalfOpen: true,\n' +
        '      pauseOnConnect: false,\n' +
        '      httpAllowHalfOpen: false,\n' +
        '      timeout: 0,\n' +
        '      keepAliveTimeout: 5000,\n' +
        '      maxHeadersCount: null,\n' +
        '      headersTimeout: 60000,\n' +
        '      requestTimeout: 0,\n' +
        "      _connectionKey: '6::::8080',\n" +
        '      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n' +
        '      [Symbol(ServerResponse)]: [Function: ServerResponse],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(async_id_symbol)]: 14\n' +
        '    },\n' +
        '    parser: HTTPParser {\n' +
        "      '0': [Function: bound setRequestTimeout],\n" +
        "      '1': [Function: parserOnHeaders],\n" +
        "      '2': [Function: parserOnHeadersComplete],\n" +
        "      '3': [Function: parserOnBody],\n" +
        "      '4': [Function: parserOnMessageComplete],\n" +
        "      '5': [Function: bound onParserExecute],\n" +
        "      '6': [Function: bound onParserTimeout],\n" +
        '      _headers: [],\n' +
        "      _url: '',\n" +
        '      socket: [Circular *1],\n' +
        '      incoming: [Circular *2],\n' +
        '      outgoing: null,\n' +
        '      maxHeaderPairs: 2000,\n' +
        '      _consumed: true,\n' +
        '      onIncoming: [Function: bound parserOnIncoming],\n' +
        '      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n' +
        '    },\n' +
        '    on: [Function: socketListenerWrap],\n' +
        '    addListener: [Function: socketListenerWrap],\n' +
        '    prependListener: [Function: socketListenerWrap],\n' +
        '    _paused: false,\n' +
        '    _httpMessage: ServerResponse {\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 1,\n' +
        '      _maxListeners: undefined,\n' +
        '      outputData: [],\n' +
        '      outputSize: 0,\n' +
        '      writable: true,\n' +
        '      destroyed: false,\n' +
        '      _last: false,\n' +
        '      chunkedEncoding: false,\n' +
        '      shouldKeepAlive: true,\n' +
        '      _defaultKeepAlive: true,\n' +
        '      useChunkedEncodingByDefault: true,\n' +
        '      sendDate: true,\n' +
        '      _removedConnection: false,\n' +
        '      _removedContLen: false,\n' +
        '      _removedTE: false,\n' +
        '      _contentLength: null,\n' +
        '      _hasBody: true,\n' +
        "      _trailer: '',\n" +
        '      finished: false,\n' +
        '      _headerSent: false,\n' +
        '      socket: [Circular *1],\n' +
        '      _header: null,\n' +
        '      _keepAliveTimeout: 5000,\n' +
        '      _onPendingData: [Function: bound updateOutgoingData],\n' +
        '      _sent100: false,\n' +
        '      _expect_continue: false,\n' +
        '      req: [Circular *2],\n' +
        '      locals: [Object: null prototype] {},\n' +
        '      flush: [Function: flush],\n' +
        '      write: [Function: write],\n' +
        '      end: [Function: end],\n' +
        '      on: [Function: on],\n' +
        '      writeHead: [Function: writeHead],\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kNeedDrain)]: false,\n' +
        '      [Symbol(corked)]: 0,\n' +
        '      [Symbol(kOutHeaders)]: [Object: null prototype]\n' +
        '    },\n' +
        '    timeout: 0,\n' +
        '    [Symbol(async_id_symbol)]: 72,\n' +
        '    [Symbol(kHandle)]: TCP {\n' +
        '      reading: true,\n' +
        '      onconnection: null,\n' +
        '      _consumed: true,\n' +
        '      [Symbol(owner_symbol)]: [Circular *1]\n' +
        '    },\n' +
        '    [Symbol(kSetNoDelay)]: false,\n' +
        '    [Symbol(lastWriteQueueSize)]: 0,\n' +
        '    [Symbol(timeout)]: Timeout {\n' +
        '      _idleTimeout: -1,\n' +
        '      _idlePrev: null,\n' +
        '      _idleNext: null,\n' +
        '      _idleStart: 3446,\n' +
        '      _onTimeout: null,\n' +
        '      _timerArgs: undefined,\n' +
        '      _repeat: null,\n' +
        '      _destroyed: true,\n' +
        '      [Symbol(refed)]: false,\n' +
        '      [Symbol(kHasPrimitive)]: false,\n' +
        '      [Symbol(asyncId)]: 143,\n' +
        '      [Symbol(triggerId)]: 140\n' +
        '    },\n' +
        '    [Symbol(kBuffer)]: null,\n' +
        '    [Symbol(kBufferCb)]: null,\n' +
        '    [Symbol(kBufferGen)]: null,\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kBytesRead)]: 0,\n' +
        '    [Symbol(kBytesWritten)]: 0,\n' +
        '    [Symbol(RequestTimeout)]: undefined\n' +
        '  },\n' +
        '  _consuming: true,\n' +
        '  _dumped: false,\n' +
        '  next: [Function: next],\n' +
        "  baseUrl: '/productos',\n" +
        "  originalUrl: '/productos?',\n" +
        '  _parsedUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  params: {},\n' +
        '  query: {},\n' +
        '  res: <ref *3> ServerResponse {\n' +
        '    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n' +
        '    _eventsCount: 1,\n' +
        '    _maxListeners: undefined,\n' +
        '    outputData: [],\n' +
        '    outputSize: 0,\n' +
        '    writable: true,\n' +
        '    destroyed: false,\n' +
        '    _last: false,\n' +
        '    chunkedEncoding: false,\n' +
        '    shouldKeepAlive: true,\n' +
        '    _defaultKeepAlive: true,\n' +
        '    useChunkedEncodingByDefault: true,\n' +
        '    sendDate: true,\n' +
        '    _removedConnection: false,\n' +
        '    _removedContLen: false,\n' +
        '    _removedTE: false,\n' +
        '    _contentLength: null,\n' +
        '    _hasBody: true,\n' +
        "    _trailer: '',\n" +
        '    finished: false,\n' +
        '    _headerSent: false,\n' +
        '    socket: <ref *1> Socket {\n' +
        '      connecting: false,\n' +
        '      _hadError: false,\n' +
        '      _parent: null,\n' +
        '      _host: null,\n' +
        '      _readableState: [ReadableState],\n' +
        '      _events: [Object: null prototype],\n' +
        '      _eventsCount: 8,\n' +
        '      _maxListeners: undefined,\n' +
        '      _writableState: [WritableState],\n' +
        '      allowHalfOpen: true,\n' +
        '      _sockname: null,\n' +
        '      _pendingData: null,\n' +
        "      _pendingEncoding: '',\n" +
        '      server: [Server],\n' +
        '      _server: [Server],\n' +
        '      parser: [HTTPParser],\n' +
        '      on: [Function: socketListenerWrap],\n' +
        '      addListener: [Function: socketListenerWrap],\n' +
        '      prependListener: [Function: socketListenerWrap],\n' +
        '      _paused: false,\n' +
        '      _httpMessage: [Circular *3],\n' +
        '      timeout: 0,\n' +
        '      [Symbol(async_id_symbol)]: 72,\n' +
        '      [Symbol(kHandle)]: [TCP],\n' +
        '      [Symbol(kSetNoDelay)]: false,\n' +
        '      [Symbol(lastWriteQueueSize)]: 0,\n' +
        '      [Symbol(timeout)]: Timeout {\n' +
        '        _idleTimeout: -1,\n' +
        '        _idlePrev: null,\n' +
        '        _idleNext: null,\n' +
        '        _idleStart: 3446,\n' +
        '        _onTimeout: null,\n' +
        '        _timerArgs: undefined,\n' +
        '        _repeat: null,\n' +
        '        _destroyed: true,\n' +
        '        [Symbol(refed)]: false,\n' +
        '        [Symbol(kHasPrimitive)]: false,\n' +
        '        [Symbol(asyncId)]: 143,\n' +
        '        [Symbol(triggerId)]: 140\n' +
        '      },\n' +
        '      [Symbol(kBuffer)]: null,\n' +
        '      [Symbol(kBufferCb)]: null,\n' +
        '      [Symbol(kBufferGen)]: null,\n' +
        '      [Symbol(kCapture)]: false,\n' +
        '      [Symbol(kBytesRead)]: 0,\n' +
        '      [Symbol(kBytesWritten)]: 0,\n' +
        '      [Symbol(RequestTimeout)]: undefined\n' +
        '    },\n' +
        '    _header: null,\n' +
        '    _keepAliveTimeout: 5000,\n' +
        '    _onPendingData: [Function: bound updateOutgoingData],\n' +
        '    _sent100: false,\n' +
        '    _expect_continue: false,\n' +
        '    req: [Circular *2],\n' +
        '    locals: [Object: null prototype] {},\n' +
        '    flush: [Function: flush],\n' +
        '    write: [Function: write],\n' +
        '    end: [Function: end],\n' +
        '    on: [Function: on],\n' +
        '    writeHead: [Function: writeHead],\n' +
        '    [Symbol(kCapture)]: false,\n' +
        '    [Symbol(kNeedDrain)]: false,\n' +
        '    [Symbol(corked)]: 0,\n' +
        "    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }\n" +
        '  },\n' +
        '  body: {\n' +
        "    query: 'mutation{\\n' +\n" +
        "      '  insertProducto(\\n' +\n" +
        `      '    \\t\\ttitle: "Cafsese negro",\\n' +\n` +
        `      '        description: "Un café potente para arrancar el día a pleno",\\n' +\n` +
        `      '        code: "612",\\n' +\n` +
        `      '        thumbnail: "https://cdn2.iconfinder.com/data/icons/coffee-19/449/Coffee_maker-512.png",\\n' +\n` +
        "      '        price: 120,\\n' +\n" +
        "      '        stock: 6\\n' +\n" +
        "      '  ) {\\n' +\n" +
        "      '    title\\n' +\n" +
        "      '    description\\n' +\n" +
        "      '    code\\n' +\n" +
        "      '    thumbnail\\n' +\n" +
        "      '    price\\n' +\n" +
        "      '    stock\\n' +\n" +
        "      '  } \\n' +\n" +
        "      '}',\n" +
        '    variables: null\n' +
        '  },\n' +
        '  _body: true,\n' +
        '  length: undefined,\n' +
        '  secret: undefined,\n' +
        '  cookies: {\n' +
        "    'connect.sid': 's:N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6.0x5HZ7hGvEb1C6QyHN/AioEGdFyfilfefTtsORyi1Cw'\n" +
        '  },\n' +
        '  signedCookies: [Object: null prototype] {},\n' +
        '  _parsedOriginalUrl: Url {\n' +
        '    protocol: null,\n' +
        '    slashes: null,\n' +
        '    auth: null,\n' +
        '    host: null,\n' +
        '    port: null,\n' +
        '    hostname: null,\n' +
        '    hash: null,\n' +
        "    search: '?',\n" +
        "    query: '',\n" +
        "    pathname: '/productos',\n" +
        "    path: '/productos?',\n" +
        "    href: '/productos?',\n" +
        "    _raw: '/productos?'\n" +
        '  },\n' +
        '  sessionStore: MongoStore {\n' +
        '    _events: [Object: null prototype] {\n' +
        '      disconnect: [Function: ondisconnect],\n' +
        '      connect: [Function: onconnect]\n' +
        '    },\n' +
        '    _eventsCount: 2,\n' +
        '    _maxListeners: undefined,\n' +
        '    crypto: null,\n' +
        '    transformFunctions: {\n' +
        '      serialize: [Function: stringify],\n' +
        '      unserialize: [Function: parse]\n' +
        '    },\n' +
        '    clientP: Promise { [MongoClient] },\n' +
        '    options: {\n' +
        "      collectionName: 'sessions',\n" +
        '      ttl: 3600,\n' +
        '      mongoOptions: {},\n' +
        "      autoRemove: 'native',\n" +
        '      autoRemoveInterval: 10,\n' +
        '      touchAfter: 0,\n' +
        '      stringify: true,\n' +
        '      crypto: [Object],\n' +
        "      mongoUrl: 'mongodb://ecommerce:3JUOQTzjfNkDKtnh@cluster0-shard-00-00.sl41s.mongodb.net:27017,cluster0-shard-00-01.sl41s.mongodb.net:27017,cluster0-shard-00-02.sl41s.mongodb.net:27017/ecommerce?ssl=true&replicaSet=atlas-o3g8d0-shard-0&authSource=admin&retryWrites=true&w=majority'\n" +
        '    },\n' +
        '    collectionP: Promise { [Collection] },\n' +
        '    generate: [Function (anonymous)],\n' +
        '    [Symbol(kCapture)]: false\n' +
        '  },\n' +
        "  sessionID: 'N6C1t_c1WbSCDJTcW-aneV_2U3kOpFU6',\n" +
        '  session: Session {\n' +
        '    cookie: {\n' +
        "      path: '/',\n" +
        '      _expires: 2022-01-22T19:39:08.627Z,\n' +
        '      originalMaxAge: 3600000,\n' +
        '      httpOnly: true\n' +
        '    },\n' +
        "    passport: { user: '61a64dde24c840e4d48164b2' }\n" +
        '  },\n' +
        '  logIn: [Function (anonymous)],\n' +
        '  login: [Function (anonymous)],\n' +
        '  logOut: [Function (anonymous)],\n' +
        '  logout: [Function (anonymous)],\n' +
        '  isAuthenticated: [Function (anonymous)],\n' +
        '  isUnauthenticated: [Function (anonymous)],\n' +
        '  _passport: {\n' +
        '    instance: Authenticator {\n' +
        "      _key: 'passport',\n" +
        '      _strategies: [Object],\n' +
        '      _serializers: [Array],\n' +
        '      _deserializers: [Array],\n' +
        '      _infoTransformers: [],\n' +
        '      _framework: [Object],\n' +
        '      _sm: [SessionManager],\n' +
        '      Authenticator: [Function: Authenticator],\n' +
        '      Passport: [Function: Authenticator],\n' +
        '      Strategy: [Function],\n' +
        '      strategies: [Object]\n' +
        '    }\n' +
        '  },\n' +
        '  user: {\n' +
        '    _id: new ObjectId("61a64dde24c840e4d48164b2"),\n' +
        "    username: 'guillelf@gmail.com',\n" +
        "    name: 'Guillermo',\n" +
        "    lastname: 'Ferrucci',\n" +
        "    address: 'Almirante Brown 1165',\n" +
        '    age: 35,\n' +
        "    phone: '+543571531154',\n" +
        "    avatar: '\\\\img\\\\userAvatar\\\\1638288862699-avatar.png',\n" +
        "    password: '$2b$10$oqnMr3SibpVaVDvmrROHEOG6R75wjKgS4ab1GGlfms.E2thkmevJ6',\n" +
        '    isAdmin: true,\n' +
        '    createdAt: 2021-11-30T16:14:22.828Z,\n' +
        '    updatedAt: 2021-11-30T16:14:22.828Z,\n' +
        '    __v: 0\n' +
        '  },\n' +
        '  [Symbol(kCapture)]: false,\n' +
        '  [Symbol(RequestTimeout)]: undefined\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [IncomingMessage],
      path: 'description',
      reason: null,
      valueType: 'IncomingMessage'
    },
    code: CastError: Cast to string failed for value "{
      fieldName: 'insertProducto',
      fieldNodes: [
        {
          kind: 'Field',
          alias: undefined,
          name: [Object],
          arguments: [Array],
          directives: [],
          selectionSet: [Object],
          loc: [Location]
        }
      ],
      returnType: GraphQLObjectType {
        name: 'Producto',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] {
          title: [Object],
          description: [Object],
          code: [Object],
          thumbnail: [Object],
          price: [Object],
          stock: [Object]
        },
        _interfaces: []
      },
      parentType: GraphQLObjectType {
        name: 'Mutation',
        description: undefined,
        isTypeOf: undefined,
        extensions: [Object: null prototype] {},
        astNode: {
          kind: 'ObjectTypeDefinition',
          description: undefined,
          name: [Object],
          interfaces: [],
          directives: [],
          fields: [Array],
          loc: [Location]
        },
        extensionASTNodes: [],
        _fields: [Object: null prototype] { insertProducto: [Object] },
        _interfaces: []
      },
      path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },
      schema: GraphQLSchema {
        __validationErrors: [],
        description: undefined,
        extensions: [Object: null prototype] {},
        astNode: undefined,
        extensionASTNodes: [],
        _queryType: GraphQLObjectType {
          name: 'Query',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _mutationType: GraphQLObjectType {
          name: 'Mutation',
          description: undefined,
          isTypeOf: undefined,
          extensions: [Object: null prototype] {},
          astNode: [Object],
          extensionASTNodes: [],
          _fields: [Object: null prototype],
          _interfaces: []
        },
        _subscriptionType: undefined,
        _directives: [
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective],
          [GraphQLDirective]
        ],
        _typeMap: [Object: null prototype] {
          Query: [GraphQLObjectType],
          Mutation: [GraphQLObjectType],
          String: [GraphQLScalarType],
          Float: [GraphQLScalarType],
          Int: [GraphQLScalarType],
          Producto: [GraphQLObjectType],
          Boolean: [GraphQLScalarType],
          __Schema: [GraphQLObjectType],
          __Type: [GraphQLObjectType],
          __TypeKind: [GraphQLEnumType],
          __Field: [GraphQLObjectType],
          __InputValue: [GraphQLObjectType],
          __EnumValue: [GraphQLObjectType],
          __Directive: [GraphQLObjectType],
          __DirectiveLocation: [GraphQLEnumType]
        },
        _subTypeMap: [Object: null prototype] {},
        _implementationsMap: [Object: null prototype] {}
      },
      fragments: [Object: null prototype] {},
      rootValue: {
        productos: [Function (anonymous)],
        insertProducto: [Function (anonymous)]
      },
      operation: {
        kind: 'OperationDefinition',
        operation: 'mutation',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },
        loc: Location {
          start: 0,
          end: 362,
          startToken: [Token],
          endToken: [Token],
          source: [Source]
        }
      },
      variableValues: {}
    }" (type Object) at path "code"
        at SchemaString.cast (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1135:12)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1386:20)
        at model.$set (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:1128:16)
        at model.Document (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:148:12)
        at model.Model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:106:12)
        at new model (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:4752:15)
        at Array.<anonymous> (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\model.js:3318:17)
        at _start (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:27:37)
        at parallelLimit (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\helpers\parallelLimit.js:23:5) {
      stringValue: '"{\n' +
        "  fieldName: 'insertProducto',\n" +
        '  fieldNodes: [\n' +
        '    {\n' +
        "      kind: 'Field',\n" +
        '      alias: undefined,\n' +
        '      name: [Object],\n' +
        '      arguments: [Array],\n' +
        '      directives: [],\n' +
        '      selectionSet: [Object],\n' +
        '      loc: [Location]\n' +
        '    }\n' +
        '  ],\n' +
        '  returnType: GraphQLObjectType {\n' +
        "    name: 'Producto',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] {\n' +
        '      title: [Object],\n' +
        '      description: [Object],\n' +
        '      code: [Object],\n' +
        '      thumbnail: [Object],\n' +
        '      price: [Object],\n' +
        '      stock: [Object]\n' +
        '    },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        '  parentType: GraphQLObjectType {\n' +
        "    name: 'Mutation',\n" +
        '    description: undefined,\n' +
        '    isTypeOf: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: {\n' +
        "      kind: 'ObjectTypeDefinition',\n" +
        '      description: undefined,\n' +
        '      name: [Object],\n' +
        '      interfaces: [],\n' +
        '      directives: [],\n' +
        '      fields: [Array],\n' +
        '      loc: [Location]\n' +
        '    },\n' +
        '    extensionASTNodes: [],\n' +
        '    _fields: [Object: null prototype] { insertProducto: [Object] },\n' +
        '    _interfaces: []\n' +
        '  },\n' +
        "  path: { prev: undefined, key: 'insertProducto', typename: 'Mutation' },\n" +
        '  schema: GraphQLSchema {\n' +
        '    __validationErrors: [],\n' +
        '    description: undefined,\n' +
        '    extensions: [Object: null prototype] {},\n' +
        '    astNode: undefined,\n' +
        '    extensionASTNodes: [],\n' +
        '    _queryType: GraphQLObjectType {\n' +
        "      name: 'Query',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _mutationType: GraphQLObjectType {\n' +
        "      name: 'Mutation',\n" +
        '      description: undefined,\n' +
        '      isTypeOf: undefined,\n' +
        '      extensions: [Object: null prototype] {},\n' +
        '      astNode: [Object],\n' +
        '      extensionASTNodes: [],\n' +
        '      _fields: [Object: null prototype],\n' +
        '      _interfaces: []\n' +
        '    },\n' +
        '    _subscriptionType: undefined,\n' +
        '    _directives: [\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective],\n' +
        '      [GraphQLDirective]\n' +
        '    ],\n' +
        '    _typeMap: [Object: null prototype] {\n' +
        '      Query: [GraphQLObjectType],\n' +
        '      Mutation: [GraphQLObjectType],\n' +
        '      String: [GraphQLScalarType],\n' +
        '      Float: [GraphQLScalarType],\n' +
        '      Int: [GraphQLScalarType],\n' +
        '      Producto: [GraphQLObjectType],\n' +
        '      Boolean: [GraphQLScalarType],\n' +
        '      __Schema: [GraphQLObjectType],\n' +
        '      __Type: [GraphQLObjectType],\n' +
        '      __TypeKind: [GraphQLEnumType],\n' +
        '      __Field: [GraphQLObjectType],\n' +
        '      __InputValue: [GraphQLObjectType],\n' +
        '      __EnumValue: [GraphQLObjectType],\n' +
        '      __Directive: [GraphQLObjectType],\n' +
        '      __DirectiveLocation: [GraphQLEnumType]\n' +
        '    },\n' +
        '    _subTypeMap: [Object: null prototype] {},\n' +
        '    _implementationsMap: [Object: null prototype] {}\n' +
        '  },\n' +
        '  fragments: [Object: null prototype] {},\n' +
        '  rootValue: {\n' +
        '    productos: [Function (anonymous)],\n' +
        '    insertProducto: [Function (anonymous)]\n' +
        '  },\n' +
        '  operation: {\n' +
        "    kind: 'OperationDefinition',\n" +
        "    operation: 'mutation',\n" +
        '    name: undefined,\n' +
        '    variableDefinitions: [],\n' +
        '    directives: [],\n' +
        "    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Location] },\n" +
        '    loc: Location {\n' +
        '      start: 0,\n' +
        '      end: 362,\n' +
        '      startToken: [Token],\n' +
        '      endToken: [Token],\n' +
        '      source: [Source]\n' +
        '    }\n' +
        '  },\n' +
        '  variableValues: {}\n' +
        '}"',
      messageFormat: undefined,
      kind: 'string',
      value: [Object],
      path: 'code',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'productos validation failed'
}
[2022-01-23T15:16:25.350] [ERROR] error - Error: productos validation failed: price: Path `price` (-1) is less than minimum allowed value (0).
    at ValidationError.inspect (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\error\validation.js:48:26)
    at internal/per_context/primordials.js:23:32
    at formatValue (internal/util/inspect.js:783:19)
    at inspect (internal/util/inspect.js:337:10)
    at formatWithOptionsInternal (internal/util/inspect.js:2016:40)
    at Object.format (internal/util/inspect.js:1890:10)
    at basicLayout (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\layouts.js:62:57)
    at app (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\appenders\file.js:64:23)
    at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\log4js\lib\log4js.js:42:5
    at Array.forEach (<anonymous>) {
  errors: {
    price: ValidatorError: Path `price` (-1) is less than minimum allowed value (0).
        at validate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1277:13)
        at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1260:7
        at Array.forEach (<anonymous>)
        at SchemaNumber.SchemaType.doValidate (E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\schematype.js:1210:14)
        at E:\CODERHOUSE\4_backend\desafiosGitHub\nodeServer\node_modules\mongoose\lib\document.js:2662:18
        at processTicksAndRejections (internal/process/task_queues.js:75:11) {
      properties: [Object],
      kind: 'min',
      path: 'price',
      value: -1,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'productos validation failed'
}
